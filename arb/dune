(library
 (name arb)
 (public_name arb)
 ; (foreign_archives ((path arb)(mode whole)))
 (foreign_archives arb)
 (foreign_stubs
  (language c)
  (names ocaml_acb_utils)
  (flags "-D_GNU_SOURCE")
 )
 (libraries zarith flint threads)
 (flags -w -9-27)
 (ctypes
  (external_library_name arb)
  (build_flags_resolver
   (vendored
    (c_flags
     "-I%{read-lines:pwd}"
     "-I%{read:flint_dir}"
     "-Werror=implicit-function-declaration"
     "-D_GNU_SOURCE"
     :standard)
    (c_library_flags "-lgmp -lmpfr")))
  (deps arb.h acb.h)
  (headers
   (include "acb.h" "string.h"))
  (type_description
   (instance Type)
   (functor Type_description))
  (function_description
   (concurrency sequential)
   (instance Function)
   (functor Function_description))
  (generated_types Types_generated)
  (generated_entry_point C)))

(rule
 (action
  (with-stdout-to
   pwd
   (run pwd))))

(data_only_dirs arb)

;make sure the library .a is compiled with pic, and is used for .cmxs

(rule
 (action
  (with-stdout-to
   flint_dir
   (run
    %{ocaml}
    %{dep:../utils/get_include_root.ml}
    2
    %{lib:flint:flint/flint.h}))))

(rule
 (targets
  dllarb.so
  libarb.a
  dirichlet.h
  mag.h
  acb_poly.h
  arb.h
  arb_calc.h
  arb_poly.h
  double_interval.h
  acb_hypgeom.h
  acb_calc.h
  arb_fmpz_poly.h
  acb_dft.h
  bernoulli.h
  acb_mat.h
  bool_mat.h
  acb_elliptic.h
  arb_fpwrap.h
  partitions.h
  acb_modular.h
  acb_dirichlet.h
  dlog.h
  arb_hypgeom.h
  arf.h
  hypgeom.h
  acb.h
  fmpz_extras.h
  arb_mat.h
  fmpr.h)
 (deps
  (source_tree arb)
  (sandbox always)
  (package flint))
 (action
  (no-infer
   (progn
    (chdir
     arb
     (progn
      (run sed -i -e "s/close(/acb_close(/g" acb_mat/eig_multiple_rump.c)
      (run
       ./configure
       --with-flint=%{read:flint_dir}
       --prefix=../prefix
       "CFLAGS=-fPIC -D_GNU_SOURCE")
      (run make library -j)
      (run make install)))
    (copy prefix/lib/libarb.so dllarb.so)
    (copy prefix/lib/libarb.a libarb.a)
    (copy prefix/include/dirichlet.h dirichlet.h)
    (copy prefix/include/mag.h mag.h)
    (copy prefix/include/acb_poly.h acb_poly.h)
    (copy prefix/include/arb.h arb.h)
    (copy prefix/include/arb_calc.h arb_calc.h)
    (copy prefix/include/arb_poly.h arb_poly.h)
    (copy prefix/include/double_interval.h double_interval.h)
    (copy prefix/include/acb_hypgeom.h acb_hypgeom.h)
    (copy prefix/include/acb_calc.h acb_calc.h)
    (copy prefix/include/arb_fmpz_poly.h arb_fmpz_poly.h)
    (copy prefix/include/acb_dft.h acb_dft.h)
    (copy prefix/include/bernoulli.h bernoulli.h)
    (copy prefix/include/acb_mat.h acb_mat.h)
    (copy prefix/include/bool_mat.h bool_mat.h)
    (copy prefix/include/acb_elliptic.h acb_elliptic.h)
    (copy prefix/include/arb_fpwrap.h arb_fpwrap.h)
    (copy prefix/include/partitions.h partitions.h)
    (copy prefix/include/acb_modular.h acb_modular.h)
    (copy prefix/include/acb_dirichlet.h acb_dirichlet.h)
    (copy prefix/include/dlog.h dlog.h)
    (copy prefix/include/arb_hypgeom.h arb_hypgeom.h)
    (copy prefix/include/arf.h arf.h)
    (copy prefix/include/hypgeom.h hypgeom.h)
    (copy prefix/include/acb.h acb.h)
    (copy prefix/include/fmpz_extras.h fmpz_extras.h)
    (copy prefix/include/arb_mat.h arb_mat.h)
    (copy prefix/include/fmpr.h fmpr.h)))))

(install
 (section lib)
 (package arb)
 (files
  (dirichlet.h as dirichlet.h)
  (mag.h as mag.h)
  (acb_poly.h as acb_poly.h)
  (arb.h as arb.h)
  (arb_calc.h as arb_calc.h)
  (arb_poly.h as arb_poly.h)
  (double_interval.h as double_interval.h)
  (acb_hypgeom.h as acb_hypgeom.h)
  (acb_calc.h as acb_calc.h)
  (arb_fmpz_poly.h as arb_fmpz_poly.h)
  (acb_dft.h as acb_dft.h)
  (bernoulli.h as bernoulli.h)
  (acb_mat.h as acb_mat.h)
  (bool_mat.h as bool_mat.h)
  (acb_elliptic.h as acb_elliptic.h)
  (arb_fpwrap.h as arb_fpwrap.h)
  (partitions.h as partitions.h)
  (acb_modular.h as acb_modular.h)
  (acb_dirichlet.h as acb_dirichlet.h)
  (dlog.h as dlog.h)
  (arb_hypgeom.h as arb_hypgeom.h)
  (arf.h as arf.h)
  (hypgeom.h as hypgeom.h)
  (acb.h as acb.h)
  (fmpz_extras.h as fmpz_extras.h)
  (arb_mat.h as arb_mat.h)
  (fmpr.h as fmpr.h)))
